# -*- mode: ruby -*-
# vi: set ft=ruby :

# This script to install Kubernetes will get executed after we have provisioned the box
$script = <<-SCRIPT
sudo yum install -y yum-utils device-mapper-persistent-data lvm2

sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

sudo yum install -y docker-ce
systemctl start docker
systemctl enable docker

cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
exclude=kube*
EOF

# Set SELinux in permissive mode (effectively disabling it)
setenforce 0
sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config

yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes

systemctl enable kubelet && systemctl start kubelet

# kubelet requires swap off
swapoff -a

#
cat > /etc/docker/daemon.json <<EOF
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF


# Restart docker.
systemctl daemon-reload
systemctl restart docker


# keep swap off after reboot
sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

sed -i '0,/ExecStart=/s//Environment="KUBELET_EXTRA_ARGS=--cgroup-driver=cgroupfs"\n&/' /etc/systemd/system/kubelet.service.d/10-kubeadm.conf

# Get the IP address that VirtualBox has given this VM
IPADDR=`ifconfig eth1 | grep inet | awk '{print $2}'| cut -f2 -d:`

echo This VM has IP address $IPADDR
# Set up Kubernetes
NODENAME="mini-k8s"

echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables

kubeadm init --ignore-preflight-errors=NumCPU --apiserver-cert-extra-sans=$IPADDR  --node-name $NODENAME --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address=$IPADDR

mkdir -p /root/.kube
mkdir -p /home/vagrant/.kube
sudo cp /etc/kubernetes/admin.conf /root/.kube/config
sudo chown root:root /root/.kube/config
sudo cp  /etc/kubernetes/admin.conf /home/vagrant/.kube/config
sudo chown vagrant:vagrant /home/vagrant/.kube/config


kubectl taint nodes --all node-role.kubernetes.io/master-
kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/k8s-manifests/kube-flannel-rbac.yml

kubectl create serviceaccount --namespace kube-system tiller
kubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:tiller

systemctl restart docker
systemctl restart kubelet

cat /dev/null > /root/.bash_history  
cat /dev/null > /home/vagrant/.bash_history
history -c
history -r

SCRIPT

Vagrant.configure("2") do |config|
  config.vm.box = "bento/centos-7"
  config.vm.hostname = "mini-k8s"
  config.vm.network "private_network", ip: "172.28.128.3"
  config.vm.provision "shell", inline: $script
  config.vm.provider "virtualbox" do |vb|
     vb.memory = "4096"
   end
end
